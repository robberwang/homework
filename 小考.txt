1.請說明 Fixnum (整數) 和 Float (浮點數) 之間的差異
ANS:
	(1).Integer為整數，分為Bignum和Fixnum二種,19位數之內的整數都是Fixnum,大於19位數的整數為Bignum
	(2).Float為浮點數，所有有小數點的數字，都是浮點數

2.今天有兩個字串：

str1 = "Hallo Welt!" 
str2 = " NTU Rails 261!"
請說明以下兩個印出字串的方式的不同處：

puts str1 + str2
puts "#{str1}#{str2}"

ANS:
	(1).puts str1 + str2 => 是指將str1+str2的結果,放到另一個string,再顯示出來
	(2).puts "#{str1}#{str2}" => 是指以行內的方式,將str1和str2連結在一起顯示出來

3.請解釋 array 和 hash 的不同處
ANS: 陣列索引值都是整數(非負數)，hash 索引值是key值

4.請寫一段 code 從 [1, "a string", 3.14, [1,2,3,4]] 這個陣列找出所有非字串的值
ANS:
a = [1, "a string", 3.14, [1,2,3,4]]
a.each do |var|
  if var.class == String
    puts var
  end
end

5.請列出兩種產出亂數的方法
ANS:
(1). rand(1..100)
(2). a = [1,2,3,4,5]
	 a.sample

6.請把 hoemowrk1 程式碼裡的裡面的使用者輸入兩個數字的方式和輸贏的判斷式改寫成 method
ANS:(應該是homework2才對,homework1不是OOP的方式,沒有method觀念,另外應該只有輸入一個英文字母)
若是題目無誤,homework2的程式及method請參閱以下

class GamePlayer 

  attr_accessor :gm_out, :user_input
  # 任何 class 一定要加建構式

  def initialize(gm_out) # 建構式
    @gm_out = gm_out # 物件變數
    @user_input = nil
    @result = nil
  end

  def get_input() #使用者輸入英文字母的method
    
    puts "|===============================================|" 
    puts "|Welcome to Rock Paper Scissors!!!              |"
    puts "|===============================================|"

    begin 
      puts "please choose one of the following: R / P / S"
      @user_input = gets.chomp.upcase
    end while !["R", "P", "S"].include?(@user_input)

  end

  def check_choose()
	#輸贏的判斷Method
	#result = 0 為平手
	#result = 1 為贏
    @result = 2 為輸

    if @user_input == @gm_out
      @result = 0
    elsif @user_input == "R"
      if @gm_out == "S"
        @result = 1
      else
        @result = 2
      end
    elsif @user_input == "P"
      if @gm_out == "R"
        @result = 1
      else
        @result = 2
      end
    else
      if @gm_out == "P"
        @result = 1
      else
        @result = 2
      end  
    end

    def print_out()
      puts "you choose #{@user_input}, gm choose #{@gm_out}"
  
      if @result == 0
        puts "no winner!"
      elsif @result == 1
        puts "you win!"
      else
        puts "you lose!"
      end     
    end

  end

end


begin #可以美化輸出

  gm = ["R", "P", "S"]
  gm_out = gm.sample

  theGame =  GamePlayer.new(gm_out)

  theGame.get_input()

  theGame.check_choose()

  theGame.print_out()

  #問使用者是否還要再玩 
  begin
    puts "Play Again?: Y / N"
    continue = gets.chomp.upcase
  end while !["Y", "N"].include?(continue)

end while continue == "Y"
# 若使用者回答 "N"，印出離開的訊息，不是就回到迴圈的上層繼續玩
puts "Good Bye! Thanks for playing!"

7.以下這段程式碼：
((1 > 3)&&(true == true))||(!!!false)
會執行出什麼結果？ 請試試不用 irb 算出結果
ANS: true


8.請問 binding.pry 是什麼？ 要如何使用它？
ANS:
for Debug
gem install pry -- 安裝pry

在程式當中
加入 require "pry"
然後在要停止的地方
加入 binding.pry
然後它會出現pry的命令列
你可以打人變數,可以觀察目前變數為何

9.下面的一段程式碼，請嘗試用其他方法把 if...else...end 簡化成一行

var = 5

if var >= 5
  return "var is greater than or equal to 5"
else
  return "var is less than 5"
end

ANS:
return = ( var >=5 ) ? "var is greater than or equal to 5" : "var is less than 5"